<?xml version="1.0" encoding="utf-8"?>
<popup:PopupBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx"
				 xmlns:comps="org.syncon.comps.*" 
				 creationComplete="onInit()" 
				 xmlns:popup="fedres.dashboard.view.popup.*" 
				 >
	<fx:Script>
		<![CDATA[
			import fedres.dashboard.controller.CustomEvent;
			import fedres.dashboard.model.vo.IndicatorVO;
			import fedres.dashboard.model.vo.ObservationVO;
			
			import mx.core.UIComponent;
			
			import org.syncon.popups.view.IPopup;
			
			import sss.Shelpers.Shelpers.ui.PopupCode;
			
			public var fxComplete : Function; 
			
			static public var CLICKED_ADD : String = 'clickedAdd'
			
			override public function onInit() : void 
			{
				this.creationComplete = true; 
				this.popupCode.center()
			}
			
			override public  function create(app:Object)  : IPopup
			{
				var popup : PopupTooltip = new PopupTooltip()
				popup.popupCode = PopupCode.Create( popup, app ) 
				return popup			
			} 
			
			override public function show(  )  : void
			{
				this.popupCode.open( false,true ) 
				this.dispatchEvent( new CustomEvent( 'openedPopup' ) ); 
			}
			
			private var ui  : UIComponent; 
			public function open(   ui_ :  UIComponent, msg : String, alignment : String = 'tr',
									xOff : Number =0, yOff : Number=0, 
									newWidth: Number = 0, newHeight : Number = 0)  : void
			{
				this.popupCode.open( false, true ) 
				ui = ui_
				
				this.txtMessage.htmlText = msg; 
				if ( newWidth != 0 ) 
					this.txtMessage.width = newWidth
				else
					this.txtMessage.width = 105
						
				if ( newHeight != 0 ) 
					this.txtMessage.height = newHeight
				else
					this.txtMessage.height = 105	
						
				if ( alignment  == 'tl' ) xOff  += -this.width; 
				this.popupCode.moveToComponent( ui, alignment, false, false, true, xOff, yOff) 						
			}  
			
 
			public function close(  ui_ : UIComponent ) : void
			{
				if ( ui_ != ui ) 
					return; 
				this.popupCode.close() 
			}
			
 
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
	</fx:Declarations>
	
	<popup:filters>
		<s:DropShadowFilter
			alpha="0.5" angle="60" blurX="4.0" blurY="4.0" color="0x000000" 
			distance="2" hideObject="false" inner="false" knockout="false" quality="2" 
			strength="1"/>
	</popup:filters>
 

	
	<s:Rect width="100%" height="100%"  >
		<s:fill>
			<s:SolidColor color="0xFFFFFF" />
		</s:fill>	
		<s:stroke>
			<s:SolidColorStroke color="0xC9CFD1"  pixelHinting="true"  weight="1"/>
		</s:stroke>
	</s:Rect>		
	
	<s:VGroup paddingTop="10" paddingBottom="10" paddingRight="10" paddingLeft="10" >
		<!--
		<s:TextArea  id="lblMessage"  selectable="false" editable="false"
					   minWidth="100"
					   minHeight="60"
					  focusAlpha="0"
					 borderVisible="false"/>
		 -->
		<!--
		<s:Label  id="lblMessage"   
					 minWidth="100"
					 minHeight="60"
					/>
		-->
		<mx:TextArea  id="txtMessage"  selectable="false" editable="false"
					 minWidth="100"
					 minHeight="60" color="#777777"
					 focusAlpha="0"
					 borderVisible="false"/>		
		
	</s:VGroup>  
 
</popup:PopupBase>
